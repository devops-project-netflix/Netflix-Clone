# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master2 branch
on:
  push:
    branches: [ master2 ]
  pull_request:
    branches: [ master2 ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  testing:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6,3.7]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: ${{ matrix.python-version}} 
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64' 
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install Dependencies
        run: make dev_env

      # Runs a single command using the runners shell
      - name: Run Tests
        run: make test
  build:
    # Runs a set of commands using the runners shell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # TODO Change your AWS region here!
          aws-region: us-east-1
      - name: Get creds
        run: |
          wget https://devopsnyu.s3.amazonaws.com/devops.pem
          chmod 400 devops.pem
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: 3.6
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64' 
      # You can test your matrix by printing the current Python version
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
      - name: echoes
        run: echo ${{GITHUB_REF}}
      - name: Build the tagged Docker image
        run: docker build . --file Dockerfile --tag devopsnetflix/devops:${{steps.vars.outputs.tag}}
      - name: Push the tagged Docker image
        run: docker push devopsnetflix/devops:${{steps.vars.outputs.tag}}
      - name: Build the latest Docker image
        run: docker build . --file Dockerfile --tag devopsnetflix/devops:latest
      - name: Push the latest Docker image
        run: docker push devopsnetflix/devops:latest
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: build+deploy:latest
        run: |
          ls
          python source/scripts/deploy.py
